  var DesktopUserSessionInfo_gStrOperatorId = "624706"; var DesktopUserSessionInfo_gStrUserName = "Siochi%2C+Regina"; var DesktopUserSessionInfo_gStrCurrentWorkPool = "SSA-TED-Work"; var gLayoutType = "classic"; var gOverridePreferences = "false"; var gPersonalRuleSetName = "624706@"; var gWelcomeHTML = "WelcomeScreen";    var gPortalWarnDirty=true;   var gPDNQueryURI="https://pdn.pega.com/products/pega-873"; var gCurrentAccessGroup="TEDDevR10:Authors"; var gRecoverPreferences = "true"; var gToolsSpaceExists = false; var gRulesSpaceExists = false; var DesktopUserSessionInfo_isAccessible = false;    var gIsMultiTenantPortal = false;     var gIsCustomTabHeaderEnabled = true;      var gIsPegaDeveloper = true;           var DesktopUserSessionInfo_gRedirectOnTimeout = false;   var gAccessGroupList="TEDDevR10:Authors,TEDDevR11:Managers,TEDDevR11:Users,TEDDevR8:Authors,TEDDevR8:Managers,TEDDevR8:Users,TEDDevR9:Authors,TEDDevR9:Managers,TEDDevR9:Users,TEDDevR10:Managers,TEDDevR10:Users,TEDR11:Authors,TEDR11:Managers,TEDR11:Users,TEDR8:Authors,TEDR8:Managers,TEDR8:Users,TEDR9:Authors,TEDR9:Managers,TEDR9:Users,TEDR10:Authors,TEDR10:Managers,TEDR10:Users,TED:Authors,TED:Managers,TED:Users,TEDDevR11:UsersTelephone,TEDDevR11:UsersInPerson,TEDDevR11:ManagersTelephone,TEDDevR11:ManagersInPerson,TEDDevR8:UsersTelephone,TEDDevR8:UsersInPerson,TEDDevR8:ManagersTelephone,TEDDevR8:ManagersInPerson,TEDDevR9:UsersTelephone,TEDDevR9:UsersInPerson,TEDDevR9:ManagersTelephone,TEDDevR9:ManagersInPerson,TEDDevR10:UsersTelephone,TEDDevR10:UsersInPerson,TEDDevR10:ManagersTelephone,TEDDevR10:ManagersInPerson,TEDR11:UsersInPerson,TEDR11:UsersTelephone,TEDR11:ManagersTelephone,TEDR11:ManagersInPerson,TEDR8:UsersInPerson,TEDR8:UsersTelephone,TEDR8:ManagersTelephone,TEDR8:ManagersInPerson,TEDR9:UsersInPerson,TEDR9:UsersTelephone,TEDR9:ManagersTelephone,TEDR9:ManagersInPerson,TEDR10:UsersInPerson,TEDR10:UsersTelephone,TEDR10:ManagersTelephone,TEDR10:ManagersInPerson,ESubmitDev:Authors,ESubmit:Authors,ESubmit:Users,SSAKMSysAdmin,TEDSandbox:Authors,TSCDev:Administrators,TSCDev:Authors,TSCDev:Users,TSCDev:Managers,TSC:Administrators,TSC:Authors,TSC:Managers,TSC:Users,TEDDevR11:Authors,"; gAccessGroupList=gAccessGroupList.substring(0,gAccessGroupList.length-1); gAccessGroupList=gAccessGroupList.split(","); var gWorkPoolList="SSA-TED-Work,"; gWorkPoolList=gWorkPoolList.substring(0,gWorkPoolList.length-1); gWorkPoolList=gWorkPoolList.split(","); var gApplicationRuleSetsList="SDFW,SDFWUnitTest_Branch_r10s234351,CETSUnauthenticated_Branch_GaurdRail,CETSUnauthenticated_Branch_D-44525,CETSUnauthenticated_Branch_MGMTReportsFix,CVBroker_Branch_D-47487,CVBroker_Branch_S-220367TestID,BRUNOCS_Branch_BrunoJosh,ESubmitCS_Branch_MGMTReportsFix,TED_Branch_FixBLOB,TED_Branch_LogCorruptCases,TED_Branch_DeleteOldCases,TED_Branch_D-47487,TED_Branch_D-47405New,TED_Branch_BEVE_BAD_Records,TED_Branch_D-47256,TED_Branch_S-225777,TED_Branch_S-223062-Tabs,TED_Branch_GuidedTour_1,TED_Branch_SQSJobscheduler,TED_Branch_S-220367TestID,TED_Branch_S-219611-2,TED_Branch_GaurdRail,TED_Branch_MI-BIX-Extracts,TED_Branch_AM_AR_AC_TMP_SCH,TED_Branch_D-44525,TED_Branch_MGMTReportsFix,TED_Branch_Perf-DBTables,TED_Branch_JZ-ReportMockups,SDFW_Branch_D-47822,SDFW_Branch_r10s234351,SDFW_Branch_CloseFailedIRs,SDFW_Branch_DeleteOldCases,SDFW_Branch_S-234062,SDFW_Branch_TestForINCjz,SDFW_Branch_S-232632CVErrHnd,SDFW_Branch_D-56432,SDFW_Branch_D-45678J,SDFW_Branch_D-46895,SDFW_Branch_S-202999Temp,SDFW_Branch_CancelButton,SDFW_Branch_GuidedTour_1,SDFW_Branch_SQSJobscheduler,SDFW_Branch_GaurdRail,SDFW_Branch_S-184262,SDFW_Branch_DataPaaage,SDFW_Branch_DelNote,SDFW_Branch_D-44525,SDFW_Branch_D-44504N,SDFW_Branch_MGMTReportsFix,SDFW_Branch_Perf-DBTables,EMES_Branch_SQSJobscheduler,EMES_Branch_MGMTReportsFix,TEDInt_Branch_MGMTReportsFix,Oauthtoken_Branch_SQSJobscheduler,CoreService_Branch_SQSJobscheduler,IAAPI_Branch_DataPaaage,CustomerService-Dialog_Branch_D-44504N,ESubmit_Branch_CloseFailedIRs,ESubmit_Branch_SQSJobscheduler,ESubmit_Branch_MI-BIX-Extracts,EPS_Branch_SQSJobscheduler,EPS_Branch_MGMTReportsFix,Pega-Engine_Branch_FixBLOB,Pega-RULES_Branch_FixBLOB,TED-UnitTest,CV-UnitTest,SDFWUnitTest,ESubmitUnitTest,CETSUnauthenticated,CVBroker,BRUNOCS,ESubmitCS,TED,PPLUnitTest,Piws2,SSAAWS,SSAAWSInt,PIUS,EMES,Pega-BIX,WFMCS,TEDInt,SDFWCS,PPL,SDFWInt,SSA,SSAInt,Oauthtoken,BEVE,AuditCore,RDS,CoreService,DirectDeposit,ChangeOfAddress,Common1099UnitTest,SSAAccessibility,ChipService,AVSWS,Common1099,MRCAPI,IAAPI,VTW,ATS,RCS,MI,CustomerService-HealthCheck,PegaCS-Operations,PegaCS-Unit,PegaCS-Reporting,PegaCS-Cases,PegaCS-Config,PegaCS-Config-Common,PegaCS-UXComponent,PegaCS-Guardrails,PegaCS-Integration,PegaCS-DataTier,PegaCS-Localization,PegaCS-Collections,PegaCS-IVR-IVA,PegaCS-BotAgent,CustomerService-Dialog,SAForCS,PegaCS-SuggestedReplies,PegaCS-ApplicationGuides,PegaCS-IVA,PegaCS-IVR,PegaCS-IVRCDH,PegaCS-WFI,PegaCS-Advisor,PegaCS-AdvisorReporting,CPM,CPM-Reports,PegaCS-Specialization,PegaAppCA,PegaApp,VoiceAICS,PegaFW-Social,PegaFW-Chat,PegaFW-CTI,PegaFW-ChannelServices,PegaFW-NPS,SA-Config,SA-Artifacts,SA-LocalCampaigns,PegaCRM-SFA,PegaCRM,PegaFW-LandingPages,PegaFW-Gadgets,PegaFW-CED,PegaCS-Infrastructure,Pega-LP_CPM,Pega-Chat,Pega-CTI,Pega-ChannelServices,PegaCRM-Specialization,PegaCRM-Base,PegaCRM-CompareUI,PegaCRM-WFI,PegaKMTSParagraphs,PegaKM,PegaKMDiagnostics,ProfanityCheck,KMReports,PegaKMToggles,PegaCRMFW-GoogleAPI,PegaFW-Gmail,PegaMKT-Advisor,PegaMKT-Integration,PegaFW-NewsFeed,Data-Visualization,VoiceAI,VoiceAIDataSet,UI-Kit-7,PegaCRM-PDFJs,ExchangeCosmosUI,PegaCRMFW-ExchangeImpl,PegaFW-EWSIntegration,PegaFW-Outlook,PowerBI,Common,Common-Cases,Common-DataTier,Common-Config,Common-DesignPatterns,Common-Utils,SSAKM,KMSpecialization,PegaKMPortal,PegaKMInt,WFM,ATSv1,ESubmit,ESubmitInt,EPS,CCM,MBR,MBRInt,BRUNO,BRUNOInt,Theme-Cosmos,PegaDeploymentManagerMergeWizard,PegaDeploymentManagerOneClickPublish,PegaDevOpsFoundationServices,PegaDeploymentManagerIntegrations,PegaDevopsShared,Pega-DevOps-Foundation,Pega-DecisionManager,Rulereference_20190919T083100624,Pega-ProcessCommander,Pega-DeploymentDefaults,Pega-DecisionSimulation,Pega-DecisionScience,Pega-DecisionArchitect,Pega-LP-Mobile,Pega-LP-ProcessAndRules,Pega-LP-Integration,Pega-LP-Reports,Pega-LP-SystemSettings,Pega-LP-UserInterface,Pega-LP-OrgAndSecurity,Pega-LP-DataModel,Pega-LP-Application,Pega-LP,Pega-SystemOperations,Pega-UpdateManager,Pega-SecurityVA,Pega-Feedback,Pega-HealthCheck,Pega-AutoTest,Pega-AppDefinition,Pega-ImportExport,Pega-LocalizationTools,Pega-RuleRefactoring,Pega-ProcessArchitect,Pega-Portlet,Pega-Content,Pega-BigData,Pega-NLP,Pega-DecisionEngine,Pega-IntegrationArchitect,Pega-SystemArchitect,Pega-Desktop,Pega-EndUserUI,Pega-Survey,Pega-Social,Pega-SharedData,Pega-API,Pega-EventProcessing,Pega-Reporting,Pega-UIDesign,Pega-Gadgets,Pega-UIComponents,Pega-UIEngine,Pega-ProcessEngine,Pega-SearchEngine,Pega-IntegrationEngine,Pega-RulesEngine,Pega-Engine,PegaLegacyRules,Pega-ProCom,Pega-IntSvcs,Pega-WB,Pega-RULES,"; gApplicationRuleSetsList=gApplicationRuleSetsList.substring(0,gApplicationRuleSetsList.length-1); gApplicationRuleSetsList=gApplicationRuleSetsList.split(","); var localeDirection = "ltr"; var gProjectManagementEnabled = false; var gPegaAgileEnabled = false; var gFeaturesEnabled = false;      gFeaturesEnabled = true;         function getWindowName(){ winName = window.name; return winName; } function setWindowName(strName) { if (strName == null || strName == "") strName = pega.ui.HarnessContextMap.getCurrentHarnessContext().getProperty('gStrWinNameDefault'); window.name = strName; }  function setUpWindowName() { var harnessContext = pega.ui.HarnessContextMap.getCurrentHarnessContext(), gStrWindowName = harnessContext.getProperty('gStrWindowName'); var clientWindowName = getWindowName();  if (typeof(gStrWindowName) != "undefined") { window.windowName = gStrWindowName; } if ((windowName != "") && (windowName != clientWindowName)) { if(!window.localStorage){ setWindowName(clientWindowName); var arguments = new Array(); arguments[0]="current"; arguments[1]="@baseclass"; arguments[2]="pzMultipleWindowWarning"; arguments[3]=""; arguments[4]=""; arguments[5]="pyDisplayHarness"; arguments[6]="yes"; arguments[7]=""; arguments[8]="No"; arguments[9]=""; arguments[10]=null; arguments[11]=""; arguments[12]=""; arguments[13]=""; pega.d.showHarnessWrapper.apply(pega.d, arguments); } } else { setWindowName(clientWindowName); } }